---
title: "Melbourne Housing EDA"
author: "Alana Pooler"
format: html
editor: visual
---

# Data Analysis: Melbourne Housing

Import packages

```{r}
#| warning: false
library(ggplot2)
library(tidyverse)
library(RColorBrewer)

# surpress scientific notation
options(scipen = 999)
```

## Data Preparation

Read in and view data

```{r}
df <- read_csv('Data/Melbourne_housing_FULL.csv', na = ('#N/A'))
head(df)
```

Check for missing values

Land size, Building Area, and Year Built have many missing values

```{r}
sum_na <- function(column){
 sum(is.na(column))
}

df |> summarize(across(everything(), sum_na))
```

Extract the year from 'Date' so we can use the year sold.

```{r}
df <- df |>
  mutate(YearSold = year(dmy(Date)))
```

Convert categorical variables to factors where appropriate

```{r}
df <- df |>
  mutate(across(c('Type', 'Method', 'Regionname', 'YearSold'), as.factor))

# Recode 'Type' values for better readability
df <- df |>
  mutate(Type = fct_recode(Type,
          'House'       = 'h',
          'Unit/Duplex' = 'u',
          'Townhouse'   = 't'))
```

The value 0 for 'Landsize' and 'BuildingArea' doesn't make sense. Since we have plenty of data to work with and many NA values already, we will remove these values.

Additionally, since I am most interested in the 'Price' variable, let's remove rows where Price is missing. This leaves us with 8,272 rows.

```{r}
df <- df |>
  filter(Landsize != 0) |>
  filter(BuildingArea != 0) |>
  filter(!is.na(Price))
```

Building Area and Land Size are measured in meters, so let's convert the units to square feet for ease of understanding. Since we are measuring land/building size, we are going to assume the original unit is square meters, rather than just meters.

```{r}
df <- df |>
  mutate(
    BuildingArea = round(BuildingArea*10.7639, 2),
    Landsize = round(Landsize*10.7639, 2)
  )
```

## Numerical Summaries

This data does not have many variables that have small enough ranges to be ideal for a contingency table, unless we create binned variables. So, let's create a binned variable for property price.

First, look at measures of spread for home prices to get an idea of what the bins should be. Mean price is larger than median price, indicating that this variable is skewed right and we should use smaller ranges on the lower end than the higher end.

```{r}
df |>
  summarize(
    mean_price = mean(Price),
    med_price = median(Price),
    sd_price = sd(Price),
    min_price = min(Price),
    max_price = max(Price))
```

Create Price Range variable

```{r}
df$PriceRange <- cut(
  df$Price,
  breaks = c(0, 300000, 600000, 900000, 1500000, 2500000, Inf),
  labels = c('0-300K', '300K-600K', '600K-900K',
             '900K-1.5M', '1.5M-2.5M', '>2.5M'),
  right = FALSE
)
```

#### Contingency Tables

Type of property: The majority of properties are houses, followed by units/duplexes, and then townhouses closely behind.

```{r}
table(df$Type)
```

Price Range: The 900k-1.5M group has the highest count of values, followed by the 600k-900k group, and then 1.5M-2.5M. Year built (or better yet, year of sale if we had it), would be helpful to look at along with this information.

```{r}
table(df$PriceRange)
```

Type of property by Price Range: Units/Duplexes tend to be the most affordable housing type, with most being in the 300k-600k range, followed by the 600k-900k price range. Unsurprisingly, houses are the most expensive home type, with most houses being in the 900k-1.5M group.

```{r}
df |>
  group_by(Type, PriceRange) |>
  summarize(count = n()) |>
  pivot_wider(names_from = Type, values_from = count)
```

Property Price by Region: The metropolitan areas have the widest ranges of home prices, whereas there are several price ranges on the higher end with no properties in Victoria. The southern metropolitan area looks to be the most expensive region.

```{r}
df |>
  group_by(Regionname, PriceRange) |>
  summarize(count = n()) |>
  pivot_wider(names_from = PriceRange, values_from = count)
```

#### Summary Statistics

Measures of spread: Building Area

Based on the mean and median, Building Area is slightly skewed right. Values of zero were removed, making the minimum 10.76 square feet (one square meter), which still doesn't make a ton of sense, but I'm going to leave it as is instead of trying to determine what the cutoff should be. The max building area, 479155, looks like it may be an outlier.

```{r}
df |>
  summarize(across(c('BuildingArea'), 
                   list('mean' = mean, 'median' = median, 'max' = max, 'min' = min), 
                   .names = '{.fn}_{.col}'))
```

Measures of spread: Land Size

Like the building area variable, this variable is slightly skewed right. The maximum value looks like it could be an outlier.

```{r}
df |>
  summarize(across(c('Landsize'), 
                   list('mean' = mean, 'median' = median, 'max' = max, 'min' = min), 
                   .names = '{.fn}_{.col}'))
```

Average and median property price by year built over the last 50 years:

```{r}
df |>
  filter(YearBuilt >= 1975) |>
  group_by(YearBuilt) |>
  summarize(across(c(Price), 
                   list('mean' = mean, 'median' = median), 
                   .names = '{.fn}_{.col}'))
```

Average and median property price by year sold

We only have 3 years of data to look at, but property prices have stayed fairly consistent aside from a slight decrease after 2016.

```{r}
df |>
  group_by(YearSold) |>
  summarize(across(c(Price), 
                   list('mean' = mean, 'median' = median), 
                   .names = '{.fn}_{.col}'))
```

Average and median property price by Region

This summary corroborates what we saw in the contigency table of home prices by region. We see a stark difference between home prices in metropolitan areas vs Victoria, with metro areas being more expensive. Western Victoria is the least expensive region, and Southern Metropolitan is the most expensive.

```{r}
df |>
  group_by(Regionname) |>
  summarize(across(c(Price), 
                   list('mean' = mean, 'median' = median), 
                   .names = '{.fn}_{.col}'))
```

Average and median Building Area and Land Size by Price Range

```{r}
df |> 
  group_by(PriceRange) |>
  summarize(
    mean_landsize = mean(Landsize),
    median_landsize = median(Landsize),
    mean_buildingarea = mean(BuildingArea),
    median_buildingarea = median(BuildingArea)
)
```

## Graphical Summaries

Histogram of home prices, with and without outliers

Before removing properties with prices above 4M AUD, it is difficult to see the distribution. After removing these properties, we can see that most of the prices are between 500k-1M.

```{r}
ggplot(df, aes(x = Price)) +
  geom_histogram(bins = 25,
                 fill = 'deepskyblue4',
                 color = 'white')  +
  labs(x = 'Home Price',
       title = 'Distribution of Home Prices')


df |>
  filter(Price < 4000000) |>
  ggplot(aes(x = Price)) +
  geom_histogram(bins = 25,
                 fill = 'deepskyblue4',
                 color = 'white') +
  labs(x = 'Home Price',
       title = 'Distribution of Home Prices')
```
Line plot of average Price vs Year Built Home prices (last 50 years)

This relationship is very volatile, with a lot of peaks and dips. We see the greatest peak average in price in homes built in 2016, and the lowest average price in homes built in 1986.

```{r}
df |>
  filter(YearBuilt >= 1975) |>
  group_by(YearBuilt) |>
  summarize(mean_price = mean(Price)) |>
  ggplot(aes(x = YearBuilt, y = mean_price)) +
  geom_line(color = 'deepskyblue4') +
  geom_point(color = 'deepskyblue3') +
  labs(x = 'Year Built',
       y = 'Average Property Price',
       title = 'Year Built vs Average Property Price')
```

Average sale price by Year Built and Year Sold

```{r}
df |>
  filter(YearBuilt >= 1975) |>
  group_by(YearBuilt, YearSold) |>
  summarize(mean_price = mean(Price)) |>
  ggplot(aes(x = YearBuilt, y = mean_price)) +
  geom_line(color = 'deepskyblue4') +
  geom_point(color = 'deepskyblue3') +
  facet_wrap(~ YearSold, nrow = 3) +
  labs(x = 'Year Built',
       y = 'Average Property Price',
       title = 'Year Built vs Average Property Price')
```

Average Price by Region

This graph confirms what we saw in the contingency table, with metro areas being more expensive than areas in Victoria, and Southern Metropolitan being the most expensive of all regions by far.

```{r}
df |> group_by(Regionname) |>
  summarize(mean_price = mean(Price)) |>
  ggplot(aes(x = mean_price, y = Regionname)) +
  geom_col(fill = 'steelblue') +
  labs(x = 'Average Property Price',
       y = 'Region',
       title = 'Average Property Price by Region')
```

Faceted plot: Price Range by Year Sold Across all 3 years, most property prices were between 600k-1.5M. 2017 had the largest number of homes sold across all price ranges and 2018 had the least. In the contingency table we saw a drop in average property price after 2016, so number of properties sold spiking in 2017 makes sense- more people are going to jump to buy homes if prices drop.

We only have data for date sold up to march of 2018, so we can't get a fully accurate comparison between all 3 years since we only have the first few months of 2018.

```{r}
ggplot(df, aes(x = PriceRange)) +
  geom_bar(fill = 'deepskyblue4') +
  facet_wrap(~ YearSold, nrow = 3) +
  labs(x = 'Price Range',
       y = 'Count',
       title = 'Property Price by Year Sold') +
  theme_minimal()
```

Correlation matrix

There aren't any incredible strong correlations in this data set, but we do see some. Building area and and number of rooms have the strongest correlation, with r = 0.58. Number of rooms and building area are also correlated with price, with r values of 0.41 and 0.48, respectively. Land size has almost no correlation with price (r = 0.016), which is surprising.

Distance and Year Built have negative correlations with Price, meaning that as you go further from Melbourne and as the property gets older, the property price decreases.

```{r}
df |>
  select(Price, Landsize, BuildingArea, Rooms, Distance, YearBuilt) |>
  cor(use = 'complete.obs')
```

Map of properties, colored by region I'm not familiar with Melbourne, so this is helpful to understand what the regions are.

```{r}
ggplot(df_map, aes(x = Longtitude, y = Lattitude)) +
  geom_point(aes(color = Regionname),
             size = 0.8) + 
  # change legend title
  labs(color = 'Region') + 
  coord_map()
```

Map of property prices with prices over 4M removed for better visualization.

```{r}
df |>
  filter(Price < 4000000) |>
  filter(!is.na(Longtitude) & !is.na(Lattitude)) |>
  ggplot(aes(x = Longtitude, y = Lattitude)) +
  geom_point(aes(color = Price),
             size = 0.8) + 
  # change legend title
  labs(color = 'Sale Price') + 
  # change color gradient
  scale_color_gradient(low = '#f1eef6', high = '#0570b0') +
  coord_map() +
  theme_light()
```
